{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTitle.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","process","response","json","data","fetchTeam","title","value","totalWins","color","totalMatches","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","fetchMatches","TeamTitle","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b13510a7.chunk.js","sourcesContent":["import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport \"./MatchDetailCard.scss\";\r\n\r\nexport const MatchDetailCard = ({teamName, match}) => {\r\n \r\n if(!match) return null;\r\n\r\n\r\n const otherTeam = match.team1===teamName?match.team2: match.team1;\r\n\r\n const otherTeamRoute = `/teams/${otherTeam}`;\r\n\r\n const isMatchWon = teamName===match.matchWinner;\r\n return (\r\n  \r\n  <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\r\n   <div>\r\n   <span className=\"vs\">vs</span>\r\n   <h1>\r\n    <Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n   <h2 className=\"match-date\">{match.date}</h2>\r\n   <h3 className=\"match-venue\">at {match.venue}</h3>\r\n   <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\r\n   </div>\r\n   <div className=\"additional-detail\">\r\n   <h3>First Innings</h3>\r\n   <p>{match.team1}</p>\r\n   <h3>Second Innings</h3>\r\n   <p>{match.team2}</p>\r\n   <h3>Man of the Match</h3>\r\n   <p>{match.playerOfMatch}</p>\r\n   <h3>Umpires</h3>\r\n   <p>{match.umpire1}, {match.umpire2}</p>\r\n   </div>\r\n  </div>\r\n );\r\n}\r\n\r\n\r\n","\r\nimport { React } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './MatchSmallCard.scss';\r\n\r\nexport const MatchSmallCard = ({teamName, match}) => {\r\n if (!match) return null;\r\n \r\n const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n\r\n const otherTeamRoute =`/teams/${otherTeam}`;\r\n\r\n const isMatchWon = teamName === match.matchWinner;\r\n\r\n return (\r\n  <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\r\n    <span className=\"vs\">vs</span>\r\n    <h1>\r\n     <Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n   <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n  </div>\r\n );\r\n}\r\n\r\n\r\n","import {React, useEffect,useState} from 'react';\r\nimport { useParams } from 'react-router';\r\nimport {PieChart} from 'react-minimal-pie-chart';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\n\r\nimport { MatchSmallCard } from '../components/MatchSmallCard';\r\n\r\nimport './TeamPage.scss';\r\n\r\nexport const TeamPage = ()=> {\r\n \r\n  const [team,setTeam] = useState({matches:[]});\r\n  const {teamName} = useParams();\r\n\r\n  useEffect(\r\n   ()=>{\r\n      const fetchTeam = async() => {\r\n        const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\r\n        const data = await response.json();\r\n        setTeam(data);\r\n      };\r\n      fetchTeam();\r\n   },[teamName]\r\n  );\r\n \r\n   if(!team ||!team.teamName) {\r\n    return  <h1>Team Not Found</h1>\r\n   }\r\n  \r\n  return (\r\n   <div className=\"TeamPage\">\r\n      <div className=\"team-name-section\">\r\n        <h1 className=\"team-name\">{team.teamName}</h1>\r\n      </div>\r\n      <div className=\"win-loss-section\">\r\n        Win / Losses\r\n        <PieChart\r\n        data={[\r\n          { title: 'Wins', value: team.totalWins, color:'#4da375'},\r\n          { title:'Loss', value: team.totalMatches-team.totalWins,\r\n            color: '#a34d5d' }\r\n        ]}\r\n        />\r\n      </div>\r\n      <div className=\"match-detail-section\">\r\n        <h3>Latest Matches</h3>\r\n        <MatchDetailCard teamName={team.teamName} match={team.matches[0]}/>\r\n      </div>\r\n      {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match}/>)}\r\n      <div className=\"more-link\">\r\n        <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More &gt;</Link>\r\n      </div>\r\n   </div>\r\n  );\r\n}\r\n\r\n","import {React} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './YearSelector.scss';\r\n\r\nexport const YearSelector = ({teamName}) => {\r\n\r\n  \r\n\r\n let years = [];\r\n const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n\r\n const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n for(let i = startYear;i<=endYear;i++){\r\n  years.push(i);\r\n }\r\n\r\n return (\r\n   <ol className=\"YearSelector\">\r\n  {years.map(year => (\r\n    <li key={year}>\r\n      <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\r\n  </li>\r\n  )\r\n  )\r\n  }\r\n  </ol>\r\n )\r\n\r\n}\r\n","import { React, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\n\r\nimport { YearSelector } from '../components/YearSelector';\r\n\r\nimport './MatchPage.scss';\r\n\r\nexport const MatchPage = () => {\r\n\r\n const [matches, setMatches] = useState([]);\r\n   const { teamName,year } = useParams();\r\n\r\n   useEffect(\r\n      () => {\r\n         const fetchMatches = async () => {\r\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\r\n            const data = await response.json();\r\n            //console.log(data.length);\r\n            setMatches(data);\r\n         };\r\n         fetchMatches();\r\n      }, [teamName,year]\r\n   );\r\n\r\n return (\r\n  <div className=\"MatchPage\">\r\n     <div className=\"year-selector\">\r\n        <h3>Select Year</h3>\r\n          <YearSelector  teamName={teamName}/>\r\n     </div>\r\n     <div>\r\n          <h1 className = \"page-heading\">{teamName} matches in {year}</h1>\r\n\r\n     {\r\n          \r\n             matches.map(match => <MatchDetailCard key={match.id } teamName={teamName} match={match} />)\r\n          \r\n     }\r\n      </div>\r\n  </div>\r\n );\r\n}\r\n\r\n","import { React } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport \"./TeamTitle.scss\";\r\n\r\nexport const TeamTitle = ({ teamName }) => {\r\n\r\n if(!teamName) return null;\r\n\r\n  return(\r\n   <div className=\"TeamTitle\">\r\n      <h1>\r\n       <Link to={`/teams/${teamName}`}>\r\n         {teamName}\r\n       </Link>\r\n      </h1>\r\n   </div>\r\n  );\r\n}\r\n\r\n\r\n","import { React, useEffect, useState } from 'react';\r\n\r\nimport { TeamTitle } from '../components/TeamTitle';\r\n\r\n\r\nimport './HomePage.scss';\r\n\r\nexport const HomePage = () => {\r\n\r\n const [teams, setTeams] = useState([]);\r\n\r\n useEffect(\r\n  () => {\r\n   const fetchAllTeams = async () => {\r\n      const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\r\n    const data = await response.json();\r\n    // console.log(data);\r\n    setTeams(data);\r\n   };\r\n   fetchAllTeams();\r\n  }, []\r\n );\r\n\r\n\r\n return (\r\n  <div className=\"HomePage\">\r\n   <div className=\"header-section\">\r\n    <h1 className=\"app-name\">IPL Dashboard</h1>\r\n   </div>\r\n   <div className=\"team-grid\">\r\n      {teams.map(team => <TeamTitle key={team.id} teamName={team.teamName} />)}\r\n   </div>\r\n   </div>\r\n );\r\n}\r\n\r\n","\nimport './App.scss';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport {TeamPage} from './pages/TeamPage';\nimport {MatchPage} from './pages/MatchPage';\nimport {HomePage} from './pages/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n        <Route path=\"/teams/:teamName/matches/:year\">\n          <MatchPage/>\n        </Route>\n        <Route path=\"/teams/:teamName\">\n          <TeamPage/>\n        </Route>\n          <Route path=\"/\">\n            <HomePage/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}